name: CI/CD Pipeline

# Este workflow se ejecutará cuando:
# - Se haga un push a las ramas `develop` o `main`.
# - Se abra o actualice un pull request hacia `develop`.
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop

# Los jobs (tareas) que se ejecutarán.
jobs:
  # Job 1: Build (compilar el proyecto).
  build:
    runs-on: ubuntu-latest # Se ejecuta en una máquina virtual con Ubuntu.
    steps:
      # Paso 1: Obtener el código del repositorio.
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js (versión 18).
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Paso 3: Instalar dependencias.
      - name: Install dependencies
        run: npm install

      # Paso 4: Compilar el proyecto.
      - name: Build frontend
        run: npm run build

  # Job 2: Test (ejecutar pruebas).
  test:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Obtener el código del repositorio.
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js (versión 18).
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Paso 3: Ejecutar pruebas.
      - name: Run tests
        run: npm test

  # Job 3: Desplegar en staging.
  deploy-staging:
    if: github.ref == 'refs/heads/develop' # Solo se ejecuta en la rama `develop`.
    runs-on: ubuntu-latest
    needs: [build, test] # Depende de que los jobs `build` y `test` hayan terminado.
    steps:
      # Paso 1: Obtener el código del repositorio.
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Desplegar en staging.
      - name: Deploy to Staging
        run: |
          echo "Desplegando en staging..."
          # Aquí irían los comandos para desplegar en DigitalOcean.
          # Por ejemplo, usando SSH:
          ssh user@staging.tudominio.com "cd /path/to/your/app && git pull origin develop && npm install && npm run build && pm2 restart your-app-name"
